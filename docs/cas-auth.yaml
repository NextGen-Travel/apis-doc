openapi: 3.0.1

info:
  title: Central Authentication Service
  version: 1.0.0

servers:
  - url: https://cas-api-dev.cloudsatlas.com.hk/api
    description: dev server

components:
  securitySchemes:
    client_token:
      in: header
      type: apiKey
      name: Authorization
      description: 驗證需要的 token, Bearer xxx
  parameters:
    accessToken:
      in: body
      name: accessToken
      schema:
        type: string
      required: true
      description: accessToken
      example: 'xxx'
    UserExpand:
      in: query
      name: expand
      schema:
        type: string
      description: 擴展內容，profile：輸出登入者prefile，validity：延長 token 有效期限
      example: 'profile,validity'
    MicroServices:
      in: query
      name: service
      schema:
        type: string
      description: 'nss, erp, scrm, dispensing'
      example: 'nss'
    appId:
      in: path
      name: appId
      schema:
        type: string
      required: true
      description: appId(uuid)
      example: '6f046e51-fd54-4749-b3ac-68e8a37f5e86'
  schemas:
    userResponse :
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        email:
          type: string
        provider:
          type: string
        confirmed:
          type: boolean
        blocked:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
    resetPassword :
      type: object
      required:
        - code
        - password
        - passwordConfirmation
      properties:
        code:
          type: string
          description: 一次性
          example: '9bec366ab69043e54158b675065296d66c519b1ed9810abbf32d236cc40d7e2030fd2327818e9f9bbba0230c2a9c3403d21da10c7e168b58b3c36fcbe54bb1fd'
        password:
          type: string
          description: 密碼
          example: '123456789'
        passwordConfirmation:
          type: string
          description: 密碼
          example: '123456789'
    forgotPassword :
      type: object
      properties:
        email:
          type: string
          description: 電子郵件
          example: 'dev@nextgen.com.hk'


paths:

  # ====================
  #
  # Auth
  #

  /v1/auth/companies:
    post:
      summary: 取的該帳號可登入公司
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: string
                  description: 帳號
                  example: 'developer'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        appId:
                          type: string

  /v1/login/{appId}:
    post:
      summary: 帳號登錄
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/appId'
        - $ref: '#/components/parameters/MicroServices'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: string
                  description: 帳號
                  example: 'developer'
                password:
                  type: string
                  description: 密碼
                  example: '123456789'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      jwt:
                        type: string
                      user:
                        $ref: '#/components/schemas/userResponse'
                      accessToken:
                        type: string

  /v1/auth/forgot-password/{appId}:
    post:
      summary: 忘記密碼
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/appId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forgotPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/forgotPassword'
      responses:
        '200':
          description: 成功

  /auth/reset-password:
    post:
      summary: 修改密碼
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/resetPassword'
      responses:
        '200':
          description: 成功

  /v1/private/auth/{appId}:
    get:
      summary: 取得登入 Bearer jwt
      tags:
        - auth
      security:
        - client_token: []
      parameters:
        - $ref: '#/components/parameters/appId'
        - $ref: '#/components/parameters/MicroServices'
        - $ref: '#/components/parameters/UserExpand'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      user:
                        $ref: '#/components/schemas/userResponse'
                      jwt:
                        type: string

  /v1/private/auth/renew:
    get:
      summary: 更新 Jwt
      tags:
        - auth
      security:
        - client_token: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      jwt:
                        type: string

  /v1/auth/{appId}:
    post:
      summary: 確定登入狀態 for client server
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/appId'
        - $ref: "#/components/parameters/accessToken"
        - $ref: '#/components/parameters/MicroServices'
        - $ref: '#/components/parameters/UserExpand'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      user:
                        $ref: '#/components/schemas/userResponse'

  # ====================
  #
  # user
  #

  /v1/register/{appId}:
    post:
      summary: 建立帳號
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/appId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: string
                  description: 帳號
                  example: 'developer'
                email:
                  type: string
                  description: 電子郵件
                  example: 'developer@nextgen.com.hk'
                password:
                  type: string
                  description: 密碼
                  example: '123456789'
                passwordConfirmation:
                  type: string
                  description: 再次確認密碼
                  example: '123456789'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/userResponse'

  /v1/register/auth/{appId}:
    post:
      summary: 建立帳號 使用 accessToken for client server
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/appId'
        - $ref: '#/components/parameters/MicroServices'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhbXRzZW5nMUBuZXh0Z2VuLmNvbS5oayIsInBhc3N3b3JkIjoiMTIzNDU2Nzg5IiwiYWNjb3VudCI6InNhbXRzZW5nMSIsImFwcElkIjoiNmYwNDZlNTEtZmQ1NC00NzQ5LWIzYWMtNjhlOGEzN2Y1ZTg2IiwiaXNzIjoi5Ym16K296Jel5oi_IiwiZXhwIjoxNjY3ODExNDU4LCJpYXQiOjE2Njc4MTExNTh9.zcFggF3GsJJlQTS1fxreWvyTCviA6rKhkvSI3kiKYRQ'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/userResponse'

  # ====================
  #
  # company
  #

  /v1/private/company/state:
    get:
      summary: 取得 company 啟用的服務狀態
      tags:
        - company
      security:
        - client_token: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  data:
                    type: object
                    properties:
                      nss:
                        type: boolean
                      erp:
                        type: boolean
                      scrm:
                        type: boolean
                      dispensing:
                        type: boolean
                      nssCallback:
                        type: string
                      erpCallback:
                        type: string

  /v1/company/mail/template:
    post:
      summary: 設定 company mail template(暫時不吃權限，使用前需要到後台開啟)
      tags:
        - company
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - type
                - subject
                - template
                - nextgen_template
                - init
              properties:
                type:
                  type: string
                  description: 模板類型
                  example: 'apply'
                subject:
                  type: string
                  description: 模板標題
                  example: ''
                template:
                  type: string
                  description: 模板內容
                  example: ''
                nextgen_template:
                  type: string
                  description: 模板(nextgen)內容
                  example: ''
                init:
                  type: boolean
                  description: 初始化 數值 = 1 ，時 subject、template、nextgen_template，參數不生效
                  example: 0
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

  /v1/company/mail/deliver:
    post:
      summary: 設定 company deliver(暫時不吃權限，使用前需要到後台開啟)，cc 跟 bcc 若有多個 mail 使用『,』做分隔
      tags:
        - company
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - from
                - cc
                - bcc
                - nextgen_template
                - init
              properties:
                from:
                  type: string
                  description: 預設寄件人
                  example: 'CloudsAtlas 團隊<no-reply@cloudsatlas.com.hk>'
                cc:
                  type: string
                  description: 副本
                  example: 'nextgentw2022@gmail.com'
                bcc:
                  type: string
                  description: 密件副本
                  example: 'nextgentw2022@gmail.com'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string