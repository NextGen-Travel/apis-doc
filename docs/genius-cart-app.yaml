openapi: 3.0.1

info:
  title: Main
  version: 1.0.0

servers:
  - url: http://localhost:8000/api/app

components:
  # 定義一些 auth 認證的 token
  securitySchemes:
    client:
      in: header
      type: apiKey
      name: Authorization
      description: 驗證需要的 token, Bearer xxx
  parameters:
    page:
      in: query
      name: page
      schema:
        type: number
      required: true
      example: 1
    language:
      in: header
      name: accept-language
      schema:
        type: string
      required: false
      example: 'en'

paths:
  /hello:
    get:
      summary: 測試還有沒有活著用的
      description: 測試還有沒有活著用的
      tags:
        - hello
      responses:
        '200':
          description: 成功

  /sliders:
    get:
      responses:
        '200':
          description: 成功

  /payments:
    get:
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                        title:
                          type: string
                        subtitle:
                          type: string
                        type:
                          type: string
                          enum:
                            - manual
                            - automatic
  /deal-of-the-day:
    get:
      summary: 取得限時活動資訊
      description: 取得限時活動資訊
      
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  deal_title:
                    type: string
                    description: 活動標題
                  deal_details:
                    type: string
                    description: 活動細節
                  deal_time:
                    type: string
                    description: 活動結束時間 yyyy-mm-dd Thh:mm:ss
                    example: '2022-07-28 T00:00:00'
                  deal_background:
                    type: string
                    description: 活動背景圖片url
  /general:
    get:
      summary: 取得系統設定資訊
      description: 取得系統設定資訊
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  logo:
                    type: string
                    description: 網站logo url
                  title:
                    type: string
                    description: 網站名稱
                  colors:
                    type: string
                    description: 網站顏色
                
  /packages:
    get:
      summary: 取得包裝方式
      description: 取得包裝方式
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        title:
                          type: string
                          description: 包裝名稱
                        subtitle:
                          type: string
                          description: 子標題
                        price:
                          type: number
                          description: 價格
  /shippings:
    get:
      summary: 取得運送方式
      description: 取得運送方式
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        title:
                          type: string
                          description: 運送方式名稱
                        subtitle:
                          type: string
                          description: 子標題（所需時間）
                        price:
                          type: number
                          description: 價格
                        
  /currency:
    get:
      summary: 取得幣別及幣值資料（以港幣為基準）
      description: 取得幣別及幣值資料（以港幣為基準）
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  currency_sign:
                    type: string
                    description: 幣別
                  currency_value:
                    type: number
                    description: 幣值（以港幣為基準）

  # ==================
  # countries
  # ==================

  /countries:
    get:
      tags:
        - country
      parameters:
        - in: path
          name: countryId
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        name:
                          type: string

  /countries/{countryId}/states:
    get:
      tags:
        - country
      parameters:
        - in: path
          name: countryId
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱
                          
  /countries/tax/{countryId}:
    get:
      tags:
        - country
      parameters:
        - in: path
          name: countryId
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        tax:
                          type: number
                          description: 該國家稅率


  # ==================
  # categories
  # ==================

  /categories:
    get:
      summary: 取得產品第一層類別
      description: 取得產品第一層類別
      tags:
        - categories
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱
                        photo:
                          type: string
                          description: 類別圖片url
                        image:
                          type: string
                          description: 類別圖片url

  /categories/{category}:
    get:
      summary: 取得特定第一層產品類別
      description: 取得特定第一層產品類別
      tags:
        - categories
      parameters:
        - in: path
          name: category
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 類別ID
                  name:
                    type: string
                    description: 類別名稱
                  photo:
                    type: string
                    description: 類別圖片url
                  image:
                    type: string
                    description: 類別圖片url

  /categories/{category}/subs:
    get:
      summary: 取得特定第一層產品類別的所有子類別（第二層）
      description: 取得特定第一層產品類別的所有子類別（第二層）
      tags:
        - categories
      parameters:
        - in: path
          name: category
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱
                        photo:
                          type: string
                          description: 類別圖片url
                        image:
                          type: string
                          description: 類別圖片url

  /categories/{category}/subs/{sub}:
    get:
      summary: 取得特定第一層產品類別下的特定子類別（第二層）
      description: 取得特定第一層產品類別底下的特定子類別（第二層）
      tags:
        - categories
      parameters:
        - in: path
          name: category
          schema:
            type: number
          required: true
          example: 1
        - in: path
          name: sub
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 類別ID
                  name:
                    type: string
                    description: 類別名稱
                  photo:
                    type: string
                    description: 類別圖片url
                  image:
                    type: string
                    description: 類別圖片url

  # ==================
  # subcategories
  # ==================

  /subcategories/{subcategory_id}/children:
    get:
      summary: 取得特定第二層類別的所有子類別（第三層）
      description: 取得特定第二層類別的所有子類別（第三層）
      tags:
        - subcategories
      parameters:
        - in: path
          name: subcategory_id
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱
                        subcategory_id:
                          type: number
                          description: 當前類別ID

  /subcategories/{subcategory_id}/children/{child}:
    get:
      summary: 取得特定第二層類別的特定子類別（第三層）
      description: 取得特定第二層類別的特定子類別（第三層）
      tags:
        - subcategories
      parameters:
        - in: path
          name: subcategory_id
          schema:
            type: number
          required: true
          example: 1
        - in: path
          name: child
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 類別ID
                  subcategory_id:
                    type: number
                    description: 上層類別ID
                  name:
                    type: string
                    description: 類別名稱
                  

  # ==================
  # childcategories
  # ==================

  /childcategories/{childcategory_id}/fourths:
    get:
      summary: 取得特定第三層類別的所有子類別（第四層）
      description: 取得特定第三層類別的所有子類別（第四層）
      tags:
        - childcategories
      parameters:
        - in: path
          name: childcategory_id
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱


  /childcategories/{childcategory_id}/fourths/{fourth}:
    get:
      summary: 取得特定第三層類別的特定子類別（第四層）
      description: 取得特定第三層類別的特定子類別（第四層）
      tags:
        - childcategories
      parameters:
        - in: path
          name: childcategory_id
          schema:
            type: number
          required: true
          example: 1
        - in: path
          name: fourth
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 類別ID
                  childcategory_id:
                    type: number
                    description: 上層類別ID
                  name:
                    type: string
                    description: 類別名稱

  # ==================
  # fourthcategories
  # ==================

  /fourthcategories/{fourthcategory_id}/fifths:
    get:
      summary: 取得特定第四層類別的所有子類別（第五層）
      description: 取得特定第四層類別的所有子類別（第五層）
      tags:
        - fourthcategories
      parameters:
        - in: path
          name: fourthcategory_id
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 類別ID
                        name:
                          type: string
                          description: 類別名稱

  /fourthcategories/{fourthcategory_id}/fifths/{fifth}:
    get:
      summary: 取得特定第四層類別的特定子類別（第五層）
      description: 取得特定第四層類別的特定子類別（第五層）
      tags:
        - fourthcategories
      parameters:
        - in: path
          name: fourthcategory_id
          schema:
            type: number
          required: true
          example: 1
        - in: path
          name: fifth
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: 類別ID
                  fourthcategory_id:
                    type: number
                    description: 上層類別ID
                  name:
                    type: string
                    description: 類別圖片url

  # ==================
  # products
  # ==================

  /products:
    get:
      tags:
        - products
      parameters:
        - in: query
          name: hot
          schema:
            type: number
          required: false
        - in: query
          name: new
          schema:
             type: number
          required: false
        - in: query
          name: sale
          schema:
            type: number
          required: false
        - in: query
          name: category
          schema:
            type: number
          required: false
        - in: query
          name: subcategory
          schema:
            type: number
          required: false
        - in: query
          name: childcategory
          schema:
            type: number
          required: false
        - in: query
          name: fourthcategory
          schema:
            type: number
          required: false
        - in: query
          name: fifthcategory
          schema:
            type: number
          required: false
        - in: query
          name: best_seller
          schema:
            type: number
          required: false
        - in: query
          name: best
          schema:
            type: number
          required: false
        - in: query
          name: featured
          schema:
            type: number
          required: false
        - in: query
          name: trending
          schema:
            type: number
          required: false
        - in: query
          name: in
          schema:
            type: string
          required: false
        #- $ref: '#/components/parameters/page'
        - in: query
          name: keyword
          required: false
          description: 搜尋產品名稱
          schema:
            type: string
            example: 'apple'
        - in: query
          name: min_price
          required: false
          description: 篩選條件-價格
          schema:
            type: number
            example: 0
          allowReserved: true  
        - in: query
          name: max_price
          required: false
          description: 篩選條件-價格
          schema:
            type: number
            example: 2000000
          allowReserved: true  
        - in: query
          name: order_by
          required: false
          description: 篩選條件（需與orderBy一起使用）
          schema:
            type: string
            enum:
               - 'updated_at'
               - 'price'
        - in: query
          name: sort
          required: false
          description: 篩選條件
          schema:
            type: string
            enum:
               - 'asc'
               - 'desc'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array

  /products/{id}:
    get:
      tags:
        - products
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
        '404':
          description: 查無資料

  /products/{id}/skus:
    get:
      tags:
        - products
      summary: 取得該產品的多個規格內容
      description: 取得該產品的多個規格內容
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        sku:
                          type: string
                          description: 該規格的sku碼
                        size:
                          type: string
                          description: 特定規格
                        price:
                          type: number
                          description: 該規格價格
                        color:
                          type: string
                          description: 該規格顏色
                        stock:
                          type: string
                          description: 該規格庫存
                        previous_price:
                          type: number
                          description: 該規格定價
                        discount:
                          type: number
                          description: 該規格折扣
        '404':
          description: 查無資料

  /products/search-tags:
    get:
      tags:
        - products
      responses:
        '200':
          description: 成功
          
        '404':
          description: 查無資料
    post:
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                  description: 搜尋關鍵字
                  example: airpod
      responses:
        '200':
          description: 成功
      

  # ==================
  # client
  # ==================

  /login:
    post:
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 帳號信箱
                  example: aaa@abc.com
                password:
                  type: string
                  description: 密碼
                  example: 12345
      responses:
        '200':
          description: 成功

  /register:
    post:
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 用戶名稱
                  example: Jin
                email:
                  type: string
                  description: 帳號信箱
                  example: aaa@abc.com
                password:
                  type: string
                  description: 密碼
                  example: 12345
                password_confirmation:
                  type: string
                  description: 密碼確認
                  example: 12345
      responses:
        '200':
          description: 成功          

  /client:
    get:
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功

  /client/wishlist:
    get:
      summary: 取得收藏商品
      description: 取得收藏商品
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: number
                          description: 產品ID
                          example: 1
    post:
      tags:
        - user
      security:
        - client: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: number
                  description: 產品ID
                  example: 123
      responses:
        '200':
          description: 成功

  /client/wishlist/{wishId}:
    delete:
      tags:
        - user
      security:
        - client: []
      parameters:
        - in: path
          name: wishId
          schema:
            type: number
          required: true
          example: 123
      responses:
        '200':
          description: 成功

  /client/orders:
    get:
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功
  
  /client/dashboard:
    get:
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      balance:
                        type: number
                        description: 錢包餘額
                        example: 100
                      reward:
                        type: number
                        description: 會員獎勵點數
                        example: 60
                      affilate_income:
                        type: number
                        description: 二次行銷獎勵
                        example: 150
  /client/dashboard/orders:
    get:
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        order_number:
                          type: string
                          description: 訂單編號
                          example: 2CiO1662602659
                        pay_amount:
                          type: number
                          description: 訂單金額
                          example: 140
                        payment_status:
                          type: string
                          description: 訂單狀態
                          example: pending
                        created_at: 
                          type: string
                          description: 訂單成立時間
                          example: "2022-09-08"
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: number
                        description: 當前頁面
                        example: 1
                      per_page:
                        type: number
                        description: 每頁數量
                        example: 10
                      total: 
                        type: number
                        description: 訂單總數
                        example: 18
  /client/dashboard/orders/pending:
    get:
      tags:
        - user
      security:
        - client: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalPending:
                    type: number
                    description: 未付款訂單數量
                    example: 2

  # ==================
  # cart
  # ==================

  /cart/compute:
    post:
      tags:
        - cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: 購物車內容
                  example:
                    - product_id: 1
                      qty: 2
                      sku: '96062623'
                coupon:
                  type: number
                  description: 優惠券
                deposits:
                  type: number
                  description: 錢包
                  example: 10
                shippings:
                  type: number
                  description: 運送方式（快速或是一般...)
                  example: 1
                packages:
                  type: number
                  description: 包裝方式（豪華包裝或是一般...)
                  example: 1
                pickups: 
                  type: number
                  description: 自取點ID
                country:  
                  type: number
                  description: 國家ID（計算稅率用）
      responses:
        '200':
          description: 成功

  /cart/checkout:
    post:
      tags:
        - cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_name:
                  type: string
                  description: 購買人
                  example: '老高'
                customer_country:
                  type: number
                  description: 帳單區域
                  example: 215
                customer_phone:
                  type: string
                  description: 帳單電話
                  example: '0900123123'
                customer_address:
                  type: string
                  description: 帳單地址
                  example: '九龍'
                customer_zip:
                  type: string
                  description: 帳單區碼
                  example: '123'
                customer_email:
                  type: string
                  description: 帳單郵件
                  example: 'zzz@nextgen.com'
                customer_state:
                  type: number
                  description: 帳單州
                  example: 47
                shipping_name:
                  type: string
                  description: 取貨人
                  example: '茉莉'
                shipping_country:
                  type: number
                  description: 送達城市
                  example: 215
                shipping_phone:
                  type: string
                  description: 送達電話
                  example: '0900123123'
                shipping_address:
                  type: string
                  description: 送達地址
                  example: '新界'
                shipping_zip:
                  type: string
                  description: 送達區碼
                  example: '123'
                shipping_email:
                  type: string
                  description: 送達郵件
                  example: 'aaa@nextgen.hk.com'
                shipping_state:
                  type: number
                  description: 送達州
                  example: 47
                pickups:
                  type: number
                  description: 自取點
                  example: 0
                packages:
                  type: number
                  description: 包裝方式
                  example: 1
                shippings:
                  type: number
                  description: 送達方式（快速，一般....)
                  example: 1
                payment_method:
                  type: number
                  description: 付款方式 (現金，信用卡等等，目前只有現金/1)
                  example: 1
                recipient:
                  type: number
                  description: 收件人資料 1 同訂購人  / 2 新增收件人資料 
                  example: 1
                shippingType:
                  type: number
                  description: 外送(1)或是自取點(2)
                  example: 1
                  enum:
                    - 1
                    - 2
                shipping_different:
                  type: number
                  description: 送達地址是否同顧客地址(0 false /1 true)
                  example: 0
                  enum:
                    - 0
                    - 1
                items:
                  type: array
                  description: 購物車內容
                  example:
                    - product_id: 3
                      qty: 2
                      sku: '3Hw3574JT8'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      order_id:
                        type: number
                        description: 訂單ID
                      order_number:
                        type: string
                        description: 訂單號碼    

  /cart/checkout-info:
    get:
      tags:
        - cart
      summary: 取得免運費資料
      description: 取得免運費資料
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      shipping_fee:
                        type: number
                        description: 基礎運費
                        example: 50
                      shipping_free:
                        type: number
                        description: 免運費門檻
                        example: 200

  # ==================
  # orders
  # ==================

  /orders/{orderNumber}:
    get:
      tags:
        - orders
      parameters:
        - in: path
          name: orderNumber
          schema:
            type: string
          required: true
          example: Xk9Z1639460878
      responses:
        '200':
          description: 成功
        '404':
          description: 訂單不存在

  /orders/{orderNumber}/products:
    get:
      tags:
        - orders
      parameters:
        - in: path
          name: orderNumber
          schema:
            type: string
          required: true
          example: Xk9Z1639460878
      responses:
        '200':
          description: 成功
        '404':
          description: 訂單不存在

  /orders/{orderNumber}/pay/{paymentName}:
    post:
      tags:
        - orders
      parameters:
        - in: path
          name: orderNumber
          schema:
            type: string
          required: true
          example: Xk9Z1639460878
        - in: path
          name: paymentName
          schema:
            type: string
          required: true
          example: paypal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  description: 幣別
                  example: 'hkd'
      responses:
        '200':
          description: 成功


  # ==================
  # pickups
  # ==================

  /pickups/{countryId}:
    get:
      summary: 取得自取點
      description: 取得特定國家下的自取點
      tags:
        - pickups
      security:
        - client: []
      parameters:
        - in: path
          name: countryId
          schema:
            type: number
          required: true
          example: 1
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 自取點ID
                          example: 1
                        location:
                          type: string
                          description: 自取點位置
                        address:
                          type: string
                          description: 自取點詳細地址
                        note:
                          type: string
                          description: 自取點相關內容
                        cost:
                          type: number
                          description: 自取點費用
                          example: 10

  # ==================
  # coupons
  # ==================
  /coupons/price/{couponCode}:
    get:
      summary: 取得該優惠卷
      description: 取得特定國家下的自取點
      tags:
        - coupons
      parameters:
        - in: path
          name: couponCode
          schema:
            type: string
          required: true
          example: 456
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: number
                        description: 優惠卷類別 (1表示現金折抵 0表示百分比折抵)
                        example: 1
                      price:
                        type: number
                        description: 優惠卷折扣金額or百分比
